<!-- VMware Host Agent configuration file -->

<config>
   <!-- current working directory  -->
   <workingDir>./</workingDir>

   <!-- location to examine for configuration files that are needed -->
   <defaultConfigPath> /etc/vmware/ </defaultConfigPath>

   <!-- location for docroot, plugins, libraries, etc. -->
   <defaultInstallPath> /usr/lib/vmware </defaultInstallPath>

   <!-- stdout for hostd process  -->
   <!-- <stdoutFile>/var/log/vmware/hostd-stdout.txt</stdoutFile> -->

   <!-- stderr for hostd process  -->
   <!-- <stderrFile>/var/log/vmware/hostd-stderr.txt</stderrFile> -->

   <!-- Memory death point for hostd -->
   <!-- <hostdStopMemInMB> 250 </hostdStopMemInMB> -->
   <!-- <hostdStopMemInPercent> 80 </hostdStopMemInPercent> -->

   <!-- Memory watermark for hostd -->
   <!-- <hostdWarnMemInMB> 180 </hostdWarnMemInMB> -->
   <!-- <hostdWarnMemInPercent> 60 </hostdWarnMemInPercent> -->

   <!-- hostd min num of fds -->
   <!-- Override by vmacore/threadPool/MaxFdsPerThread  -->
   <!-- hostdMinFds> 2048 </hostdMinFds -->

   <!-- hostd absolute max num of fds -->
   <!-- hostdMaxFds> 4096 </hostdMaxFds -->

   <!-- hostd mmap threshold in kilo bytes -->
   <hostdMmapThreshold> 32 </hostdMmapThreshold>

   <!-- Mode in which hostd runs: defines product type -->
   <hostdMode> ws </hostdMode>

   <!-- True if hostd is running in simulator mode -->
   <mockup>
      <enabled> false </enabled>
      <!-- Bump the count if hostd runs out of memory in simulator mode when
           you create more VMs -->
      <supportedVMs> 128 </supportedVMs>
   </mockup>

   <!-- Frequency of memory checker -->
   <!-- <memoryCheckerTimeInSecs> 30 </memoryCheckerTimeInSecs> -->

   <log>
      <!-- controls where rolling log files are stored
           If directory is changed from default, may also want to
           pass '-l some-dir' to hostd program at startup.
        -->

      <directory>/var/log/vmware/</directory>

      <!-- name of log file -->
      <name>hostd</name>

      <!-- If true, redirect stderr to stdout. stdout inherits from
           parent process. Log() (limited to default log level (see below))
           will then be written to stdout.  If false, stderr and stdout
           are redirected to /dev/null on linux. On win32 this option is
           not used.
           At runtime, see vimsh internalsvc/redirect_stdout|err
        -->
      <outputToConsole>true</outputToConsole>

      <!-- If true, logs to syslog -->
      <outputToSyslog>false</outputToSyslog>

      <!-- If true, log to files on disk -->
      <!-- <outputToFiles>true</outputToFiles> -->

      <!-- syslog configuration.  Only used if outputToSyslog is true. -->
      <syslog>
         <!-- syslog identifier to use when logging -->
         <ident>Hostd</ident>

         <!-- syslog facility to use when logging -->
         <facility>local4</facility>

         <!-- The section header contents are placed in this file at startup.
              When vmsyslogd rotates the hostd log file, it logs the content of this
              file to syslog. This is being done so that we don't lose context on log
              rotations.
              IMPORTANT: Value needs to match that in onrotate entry in
              vmsyslog.d/hostd.conf
         -->
         <logHeaderFile>/var/run/vmware/hostdLogHeader.txt</logHeaderFile>

      </syslog>

      <!-- default size(in bytes) of each log file before rolling over to next -->
      <!-- <maxFileSize>10485760</maxFileSize> -->

      <!-- default number of log files to rotate amongst -->
      <!-- <maxFileNum>10</maxFileNum> -->

      <!-- default log level -->
      <level>verbose</level>

      <!-- if false disable logging to memory buffer -->
      <!-- <outputToMemory>true</outputToMemory> -->

      <!-- default memory log level -->
      <!-- <memoryLevel>verbose</memoryLevel> -->

      <!-- memory log buffer size in KB -->
      <!-- <memoryLogSizeK>64</memoryLogSizeK> -->
   </log>

   <!-- The root password will expire if this value is set to true -->
   <rootPasswdExpiration>false</rootPasswdExpiration>

   <!-- Log level configuration (Rules are applied in order)
    <level id = "0">
       <logName> App </logName>
       <logLevel> info </logLevel>
       <memoryLevel>verbose</memoryLevel>
       <prefix> true </prefix>
    </level>
    <level id = "1">
       <logName> BaseLibs </logName>
       <logLevel> quiet </logLevel>
       <memoryLevel>verbose</memoryLevel>
       <prefix> false </prefix>
    </level>
    <level id = "2">
       <logName> Vmsvc </logName>
       <logLevel> info </logLevel>
       <memoryLevel>verbose</memoryLevel>
       <prefix> true </prefix>
    </level>
    <level id = "3">
       <logName> /vmfs/volumes/foo/foo.vmx </logName>
       <logLevel> trivia </logLevel>
       <memoryLevel>verbose</memoryLevel>
       <prefix> false </prefix>
    </level>
    <level id = "Vigor">
       <logName> Vigor </logName>
       <logLevel> info </logLevel>
       <memoryLevel>verbose</memoryLevel>
       <prefix> true </prefix>
    </level>
   -->
   <level id = "4">
      <logName> SoapAdapter.HTTPService </logName>
      <logLevel> info </logLevel>
      <prefix> false </prefix>
   </level>

   <level id="TCP">
     <logName>TCP</logName>
     <logLevel>error</logLevel>
     <prefix>false</prefix>
   </level>

   <!--
   <level id="IO">
     <logName>IO</logName>
     <logLevel>error</logLevel>
     <prefix>false</prefix>
   </level>
   -->

   <!--
        Logger for the data passed through the proxy
        Uncomment the following block to enable it.

        WARNING: this data may contain sensitive informatino, such as
        passwords, session IDs, etc.
   -->
   <!--
   <level id="ProxyReqData">
     <logName>Proxy Req Data</logName>
     <logLevel>trivia</logLevel>
     <prefix>true</prefix>
   </level>
   -->

   <!-- Remove the following node to disable SSL -->
   <ssl>
      <!-- The server private key file -->
      <privateKey>/etc/vmware/ssl/rui.key</privateKey>

      <!-- The server side certificate file -->
      <certificate>/etc/vmware/ssl/rui.crt</certificate>

      <!-- The SSL version to use -->
      <!-- <sslVersion>all</sslVersion> -->
   </ssl>

   <!-- Directory on the Console OS accessible to the DatastoreBrowser -->
   <browsableConsoleDir>/vmimages</browsableConsoleDir>

   <!-- Location of vm inventory file on legacy host -->
   <!-- <legacyVmInventory>/etc/vmware/vm-list</legacyVmInventory> -->

   <!-- VMOMI configuration -->
   <vmomi>
     <!-- MOB configuration -->
     <mob>
       <!-- Max size of POST requests in KB -->
       <!-- <maxPostRequestSizeKB>1024</maxPostRequestSizeKB> -->
     </mob>
     <!-- VMOMI validator configuration -->
     <validation>
       <!-- The validation is enabled by default -->
       <!-- <enabled>true</enabled> -->
     </validation>
   </vmomi>

   <vmacore>
      <pluginBaseDir>./</pluginBaseDir>
      <!-- default thread pool configuration for Posix impl -->
      <threadPool>
        <IoMin>2</IoMin>
        <IoMax>32</IoMax>
        <TaskMin>2</TaskMin>
        <TaskMax>12</TaskMax>
        <MaxFdsPerThread> 2048 </MaxFdsPerThread>
        <NumKeepAlive>8</NumKeepAlive>
        <ThreadCheckTimeSecs>600</ThreadCheckTimeSecs>
        <ThreadStackSizeKb>256</ThreadStackSizeKb>
        <threadNamePrefix>hostd</threadNamePrefix>
        <!-- <threadCountWarningThreshold>2</threadCountWarningThreshold> -->

        <!-- Use fair work queues thread pool. -->
        <!-- <fairThreadPool>true</fairThreadPool> -->

        <!-- defaults to 14, Max number of threads used for FWQ items -->
        <!-- <maxThreads>14</maxThreads> -->

        <!-- defaults to 5, Initial number of threads used for FWQ items -->
        <!-- <minThreads>5</minThreads> -->

         <!-- defaults to 2, number of IO threads used by the FWQ thread pool -->
         <!-- These threads perform the asynchronous IO and provide timer services.
                  Generally small number should be enough as no blocking operations
                  are executed within IO threads.
                  A CPU intensive operation performed in these threads is SSL handling,
                  so on multi-CPU machine with high volume of SSL traffic it may be
                  beneficial increasing this number.
         -->
         <!-- <ioThreads>2</ioThreads> -->

        <!-- defaults to 3, Ratio between the number of concurrent items in a
             priority and threads reserved for higher priority queues.
             One thread is reserver for every N concurrent items.  -->
        <!-- <reservationRatio>3</reservationRatio> -->

      </threadPool>
      <ssl>
          <doVersionCheck> false </doVersionCheck>
          <libraryPath>/usr/lib/vmware</libraryPath>
          <!-- allowed SSL/TLS protocol versions -->
          <!-- <protocols>tls1.0,tls1.1,tls1.2</protocols> -->

         <!-- timeouts for the SSL handshake. the default is 20 sec. -->
         <!-- <handshakeTimeoutMs>60000</handshakeTimeoutMs> -->
      </ssl>

      <http>
         <!-- timeouts for HTTP connections. the defaults are infinite. -->
         <!-- <readTimeoutMs>60000</readTimeoutMs> -->
         <!-- <writeTimeoutMs>60000</writeTimeoutMs> -->

         <!-- Num of max proxy connections -->
         <!-- PR 604415: Temporary lower the connections limit to 128 -->
         <maxConnections> 128 </maxConnections>
      </http>

      <vmdb>
         <!-- maximum number of VMDB connections allowed -->
         <!-- <maxConnectionCount>100</maxConnectionCount> -->

         <!-- timeouts for VMDB connections. the defaults are infinite. -->
         <!-- <readTimeoutMs>60000</readTimeoutMs> -->
         <!-- <writeTimeoutMs>60000</writeTimeoutMs> -->
      </vmdb>

      <!-- enable plugin loading -->
      <loadPlugins> true </loadPlugins>

      <!-- enable/disable the dynamic loading of plugins -->
      <loadDynamicPlugins> false </loadDynamicPlugins>

      <!-- Enable/disable the stack tracer -->
      <!-- <useStackTracer>false</useStackTracer> -->

      <xml>
         <doc>
            <!-- maximum size of each XML message. -->
            <maxChars>104857600</maxChars>
            <!-- maximum nodes in of each XML message. -->
            <maxNodes>524288</maxNodes>
            <!-- maximum node depth of each XML message. -->
            <maxDepth>1000</maxDepth>
         </doc>
      </xml>
   </vmacore>

   <dispatcher>
      <!-- turns dispatcher on/off -->
      <!-- <enabled>true</enabled> -->

      <!-- Enables debugging output -->
      <!-- <debug>false</debug> -->

      <!-- Debug flags -->
      <!-- <flags>0</flags> -->

      <!-- The file containing dispatcher policies -->
      <dispatcherConfig>/etc/vmware/hostd/dispatcher.xml</dispatcherConfig>

      <!-- The file containing tag extraction rules -->
      <tagExtractorConfig>/etc/vmware/hostd/tagExtractor.xml</tagExtractorConfig>
   </dispatcher>

   <plugins>
      <vimsvc>
         <path>libvimsvc.so</path>

         <!-- default administrator principal -->
         <!-- <defaultPrincipal>root</defaultPrincipal> -->

         <!-- default file used to persist ACL data -->
         <!-- <authorization>/etc/vmware/hostd/authorization.xml</authorization> -->

         <!-- default file used to supply required privileges for dynamic methods -->
         <!-- <dynMethodPrivConfig>/etc/vmware/hostd/dynMethodPriv.xml</dynMethodPrivConfig> -->

         <!-- default setting for performing authorization checks -->
         <enableAuthCheck>true</enableAuthCheck>

         <!-- default setting for where vmware-hostd-ticket directory is created -->
         <!-- <localTicketParentDir>/var/run</localTicketParentDir> -->

         <!-- default setting for life time of a local ticket -->
         <!-- <localTicketLifeSecs>10</localTicketLifeSecs> -->

         <!-- default setting for maximum number of times a ticket can be used -->
         <!-- <localTicketMaxUse>1</localTicketMaxUse> -->

    <!-- time to retain tasks after they complete -->
    <!-- <taskRetentionInMins> 10 </taskRetentionInMins> -->

    <!-- cleanup interval time between task reaping -->
    <!-- <taskCleanupIntervalInMins> 1 </taskCleanupIntervalInMins> -->

         <!-- maximum number of events to store -->
         <!-- <maxEvents>1000</maxEvents> -->

    <!-- development build default setting for license mockup -->
    <licenseMockup>false</licenseMockup>

         <!-- Disable i18nFilter -->
         <!-- <i18nFilterDisabled> false </i18nFilterDisabled> -->
         <!-- cloning of objects by i18nFilter -->
         <!-- <i18nCloneDisabled> true </i18nCloneDisabled> -->
         <license>
            <!-- location of the read-write flexlm configuration file -->
            <!-- <config> /etc/vmware/license.cfg </config> -->
         </license>
         <userManager>
            <!-- Max time in seconds to wait for a subcommand to complete -->
            <!-- <subcommandWait> 10 </subcommandWait> -->
         </userManager>

         <!-- VC API lockdown mode (MN) - true to enable handling it -->
         <apiLockdown>true</apiLockdown>

         <requires>hostsvc solo</requires>

      </vimsvc>
      <hostsvc>
         <path>libhostsvc.so</path>

         <vflash>
            <defaultVFlashModule>vfc</defaultVFlashModule>
            <vffsUuid>0</vffsUuid>
            <refreshVffsInterval>30</refreshVffsInterval>
         </vflash>

         <datastore>
            <!-- default datastore inventory-->
            <!-- <inventory>/etc/vmware/hostd/datastores.xml</inventory> -->

            <!-- default datastore refresh interval in minutes -->
            <!-- use 0 to disable the auto refresh -->
            <!-- <refreshInterval>0</refreshInterval> -->

            <!-- default refresh interval for datastore-freespace when provisioning virtual disks -->
            <!-- <refreshVdiskInterval>30</refreshVdiskInterval> -->
         </datastore>

         <mockup>
            <!-- turns mockup impl on/off -->
            <enabled>false</enabled>

            <!-- default filepath for host info -->
            <filepath>/etc/vmware/hostd/mockup-host-config.xml</filepath>
         </mockup>
         <vmResources>/etc/vmware/hostd/vmResources.xml</vmResources>

         <!-- default location of the hostsvc config file -->
         <!-- <config>/etc/vmware/hostd/hostsvc.xml</config> -->

         <!-- default location of the resource pool config file -->
         <!-- <pools>/etc/vmware/hostd/pools.xml</pools> -->

         <!-- default location of the host service list -->
         <services>/etc/vmware/service/</services>

         <storage>
            <!-- storage data synchronization policy-->

       <!-- policy: invalidate on configuration change (default) -->
            <!-- <syncpolicy>invalid_change</syncpolicy> -->

       <!-- policy: always fetch data when queried -->
            <!-- <syncpolicy>fetch_always</syncpolicy> -->

       <!-- policy: fetch data on configuration change -->
            <!-- <syncpolicy>fetch_change</syncpolicy> -->

            <!-- default storage inventory refetch interval, after getting multiple Path-state change events, in seconds -->
            <refetchStorageInterval>120</refetchStorageInterval>
         </storage>

         <rsrc>
            <!-- Refresh interval (in seconds) for root resource pool capacity -->
            <!-- <refreshInterval>60</refreshInterval> -->
         </rsrc>
         <vmfs2upgrade>
            <!-- <undoattempts>15</undoattempts> -->
            <!-- <timeoutmsec>2000</timeoutmsec> -->
         </vmfs2upgrade>

         <!-- Controls to enable/disable expressions in the datastore filter -->
         <!-- <datastoresystem> -->
       <!-- <diskfilter> -->
               <!-- <NoUsbDisks>true</NoUsbDisks> -->
               <!-- <UsedAsVmRdm>true</UsedAsVmRdm> -->
       <!-- </diskfilter> -->
         <!-- </datastoresystem> -->

         <!-- Controls to enable/disable expressions in the SCSI LUN filter -->
         <!-- <scsilunfilter> -->
            <!-- <NoUsbDisks>true</NoUsbDisks> -->
         <!-- </scsilunfilter> -->

         <!-- Controls to enable/disable expressions in the RDM filter -->
         <!-- <rdmfilter> -->
            <!-- <RdmCapable>true</RdmCapable> -->
         <!-- </rdmfilter> -->
    <!-- <maxVms> 512 </maxVms> -->
         <NetmapFile> /etc/vmware/netmap.conf </NetmapFile>


         <!-- Storage I/O Resource Manager settings -->
         <storageiorm>
             <enabled>false</enabled>
             <congestionThreshold.min>5</congestionThreshold.min>
             <congestionThreshold.max>100</congestionThreshold.max>
             <congestionThreshold.default>30</congestionThreshold.default>
         </storageiorm>
      </hostsvc>
      <vmsvc>
         <path>libvmsvc.so</path>
         <mockup>
            <enabled>false</enabled>
         </mockup>
         <enableMockup>false</enableMockup>

    <!--
    Check for version mismatches against the vmkernel.
    This is disabled by default for developers but for all other
    users, they must keep their vmkernels upto date.
     -->
    <checkVersionMismatch> false </checkVersionMismatch>
         <!-- <vmDirectory> /home/vmware </vmDirectory> -->
    <!-- <maxSnapshotDepth> 32 </maxSnapshotDepth> -->

         <!-- Configuration options for quiesced snapshots -->
         <quiescedSnap>
            <!-- Seconds that quiesce requests will queue before continuing. -->
            <!-- <serializeTimeout> 120 </serializeTimeout> -->
         </quiescedSnap>

    <!-- The maximum number of virtual disks allowed on this host -->
    <!-- <maxDisksPerVirtualMachine> 120 </maxDisksPerVirtualMachine> -->

    <!-- The timer interval for task updates in microseconds -->
    <!-- <taskTimerInterval> 1000000 </taskTimerInterval> -->

    <!-- Default user context to use to perform VM operations -->
    <!-- <datastorePrincipal>root</datastorePrincipal> -->

         <!-- Virtual machine VMotion parameters -->
         <vmotion>
            <!-- Timeout for VMotion prepare operation (milliseconds) -->
            <!-- <prepareTimeout> 30000 </prepareTimeout> -->

            <!-- Timeout for VMotion source initiate operation (milliseconds) -->
            <!-- <srcInitiateTimeout> 30000 </srcInitiateTimeout> -->

            <!-- Timeout for VMotion destination ID population (milliseconds) -->
            <!-- <dstIdTimeout> 120000 </dstIdTimeout> -->
         </vmotion>
         <!-- <defaultPowerOffType> soft </defaultPowerOffType> -->
         <!-- <defaultSuspendType> hard </defaultSuspendType> -->
         <!-- <defaultResetType> hard </defaultResetType> -->
         <!-- <validateVMId> false </validateVMId> -->
    <!-- <heartbeatCheckTimeInSecs> 30 </heartbeatCheckTimeInSecs> -->
         <!-- <heartbeatRedAlert> 0.40 </heartbeatRedAlert> -->
         <!-- <heartbeatYellowAlert> 0.80 </heartbeatYellowAlert> -->

    <!-- Setting to enable/disable activation of change tracking -->
    <!-- when upgrading a virtual machine's HW version to HW7 or newer -->
    <!-- or when adding a new disk to a HW7 or newer VM. -->
    <!-- <useChangeTracking> true </useChangeTracking> -->

    <!-- Setting to enable/disable the use of vigorVim to read the -->
         <!-- vm configuration information -->
         <useVigorVim> true </useVigorVim>

         <requires>vimsvc</requires>

      </vmsvc>
      <vcsvc>
         <path>libvcsvc.so</path>
         <mockup>
            <enabled>false</enabled>
         </mockup>
         <!-- VMotion parameters -->
         <vmotion>
            <!-- Location of the VMotion journal; either an absolute -->
            <!-- path or relative to the default log path -->
            <!-- <journalDir> journal </journalDir> -->

            <!-- Source-side VMotion timeout (milliseconds) -->
            <!-- <srcBeginTimeout> 240000 </srcBeginTimeout> -->

            <!-- Destination-side VMotion timeout (milliseconds) -->
            <!-- <dstBeginTimeout> 60000 </dstBeginTimeout> -->
         </vmotion>

         <!-- AgentManager parameters -->
         <agentMgr>
           <!-- Timeout (in seconds) for the upgrade command -->
           <!-- <timeout> 360 </timeout> -->

           <!-- Name of the upgrade directory (relative to a provided tmpdir) -->
           <!-- <upgradeDir> ha-agentmgr </upgradeDir> -->

           <!-- upgradeCerts is a path to a file containing accepted signer certificates -->
           <!-- <upgradeCerts>/usr/share/certs/vmware.cert</upgradeCerts> -->

           <!-- Path to shell -->
           <!-- <shellPath>/bin/sh</shellPath> -->

         </agentMgr>

         <requires>hostsvc</requires>

      </vcsvc>
      <solo>
         <path>libsolo.so</path>
         <mockup>
            <enabled>false</enabled>
         </mockup>

    <!-- The file containing the list of environment description files -->
    <environments>/etc/vmware/hostd/environments.xml</environments>

         <!-- The file containing the virtual machine inventory -->
         <vmInventory>/etc/vmware/hostd/vmInventory.xml</vmInventory>

         <!-- The file containing the AutoStart settings -->
         <!-- <vmAutoStart>/etc/vmware/hostd/vmAutoStart.xml</vmAutoStart> -->

         <!-- The file containing the resource pool and VM resource settings -->
         <!-- <resources>/etc/vmware/hostd/resources.xml</resources> -->

         <!-- The file containing the provisoning policies -->
         <provisioningPolicy>/etc/vmware/hostd/env/provisioningPolicy.xml</provisioningPolicy>

    <!-- The file containing the hardware info mockup -->
    <hwInfo>/etc/vmware/hostd/hwInfo.xml</hwInfo>

         <!-- Controls to enable/disable expressions in the RDM filter -->
         <!-- <rdmfilter> -->
            <!-- Only show disks that are attached to shared storage. -->
            <!-- <HbaIsShared>true</HbaIsShared> -->

            <!-- Only show disks that are not an extent of a VMFS volume. -->
            <!-- <UsedByVmfs>true</UsedByVmfs> -->

            <!-- Only show disks that are not already used as an RDM target. -->
            <!-- <UsedAsVmRdm>true</UsedAsVmRdm> -->
         <!-- </rdmfilter> -->

         <!-- Disable Resource Pool Initialization -->
         <!-- <disableResourcePoolInit> false </disableResourcePoolInit> -->

    <!-- Soap port. Also turns on proxy forwarding to a TCP port -->
    <soapPort> 8307 </soapPort>

    <!-- Secure Soap port for accecpting SSL tunneling from proxy -->
    <!-- If disabled, SSL tunneling is done over a named pipe. -->
    <!-- <secureSoapPort> 8306 </secureSoapPort> -->

         <!-- Whether to enable secure Soap adapter -->
         <enableSecureSoap> false </enableSecureSoap>

    <!-- 64 bit support -->
    <!-- <support64bit> true </support64bit> -->

    <!-- Enable Vmomi tracing -->
    <!-- <traceVmomi> true </traceVmomi> -->

    <!-- The log level at which to output vmomi tracing -->
    <traceAt> verbose </traceAt>

    <!-- Whether to only trace faults in the return -->
    <!-- <traceFaultsOnly> true </traceFaultsOnly> -->

    <!-- Cause segv -->
    <!-- <causeSegv> false </causeSegv> -->

    <!-- Cause exception -->
    <!-- <causeException> false </causeException> -->

    <loglevels>
          <module>
             <name> disklib </name>
             <level> 0 </level>
          </module>
          <!-- <module> -->
             <!-- <name> baz </name> -->
             <!-- <level> 2 </level> -->
             <!-- <extension> bar </extension> -->
       <!-- </module> -->
    </loglevels>

    <!-- web server settings -->
    <webServer>
       
       <docRoot> /usr/lib/vmware/hostd/docroot/</docRoot>
       <cgiBinPath> /usr/lib/vmware/hostd/cgi-bin/</cgiBinPath>
    </webServer>

         <!-- Enable managed object browser -->
         <!-- <enableMob>true</enableMob> -->

    <!-- periodic keep alive logging -->
    <!-- <runTimerTest> false </runTimerTest> -->
    <!-- <runTimerIntervalInSecs> 3 </runTimerIntervalInSecs> -->

         <dynamo>
            <enabled> false </enabled>

            <manager id="0">
               <enabled> true </enabled>
               <moId>ha-dynamic-type-manager-python</moId>
               <type>soap-stdio</type>
               <soap-stdio>
                  <command>/usr/bin/sh</command>
                  <arg id="0">-l</arg>
                  <arg id="1">-c</arg>
                  <arg id="2">/usr/bin/python -m PyVmomiServer -g --loglevel info -s PyVmomiServer</arg>
               </soap-stdio>
            </manager>

            <manager id="1">
               <enabled> false </enabled>
               <moId>ha-dynamic-type-manager-vapi</moId>
               <type>soap-http</type>
               <soap-http>
                  <port>8088</port>
                  <command>/usr/bin/sh</command>
                  <arg id="0">-l</arg>
                  <arg id="1">-c</arg>
                  <arg id="2">/sbin/vapid -s vapid</arg>
               </soap-http>
            </manager>

            <manager id="2">
               <enabled> true </enabled>
               <moId>ha-dynamic-type-manager-local-cli</moId>
               <type>vmware-cli</type>
               <vmware-cli>
                  <path>/usr/lib/vmware/esxcli</path>
               </vmware-cli>
            </manager>
         </dynamo>

         <!-- Managed method executer -->
         <!-- <mme> -->
            <!-- <enabled> true </enabled> -->
         <!-- </mme> -->

         <requires>hostsvc</requires>
      </solo>

      <!-- Reverse HTTP Proxy service -->
      <proxysvc>
         <path>libproxysvc.so</path>

         <!-- default location of the proxy config file for hosted products-->
         <config>/etc/vmware/hostd/proxy.xml</config>
         <!-- default location of proxy config file for ESX-->
         <endpoints>/etc/vmware/rhttpproxy/endpoints.conf</endpoints>
         <requires>hostsvc</requires>

      </proxysvc>

      <statssvc>
         <path>libstatssvc.so</path>
         <enabled>false</enabled>
         <mockup>
            <!-- turns mockup impl on/off -->
            <enabled>false</enabled>
         </mockup>

         <!-- Directory to store stats related files in -->
         <!-- <depotDir> /var/lib/vmware/hostd/stats/ </depotDir> -->

         <!-- Name of the StatsDepot -->
         <!-- <depotName> hostAgentStats </depotName> -->

         <!-- Max number of stats to purge in one shot -->
         <!-- <maxStatsPurged> 1000 </maxStatsPurged> -->

         <!-- Real time stats collection interval -->
         <!-- <collectionInterval> 20 </collectionInterval> -->

         <!-- Enable historical stats collection -->
         <!-- <historicalStatsEnabled> true </historicalStatsEnabled> -->
         <!-- Enable collection of virtual disk stats -->
         <!-- <collectVdiskStats> true </collectVdiskStats> -->
         <!-- Enable collection of Host Datastore stats -->
         <!-- <collectHostDsStats> true </collectHostDsStats> -->
         <!-- Enable collection of Storage Path and Adapter stats -->
         <!-- <collectPathAdapterStats> true </collectPathAdapterStats> -->
         <!-- Enable collection of VM Datastore stats -->
         <!-- <collectVmDsStats>true </collectVmDsStats> -->
         <!-- Enable collection of VFlash Module stats -->
         <!-- <collectVFlashModuleStats> true </collectVFlashModuleStats> -->
         <!-- Enable collection of VSAN DOM stats -->
         <!-- <collectVSanDomStats> false </collectVSanDomStats> -->

      </statssvc>

      <partitionsvc>
         <path>libpartitionsvc.so</path>
         <enabled>false</enabled>
      </partitionsvc>

      <internalsvc>
         <path>libinternalsvc.so</path>
         <requires>hostsvc</requires>
      </internalsvc>

      <!-- The nfc service -->
      <nfcsvc>
         <path>libnfcsvc.so</path>
         <enabled>true</enabled>
         <mockup>
            <enabled>false</enabled>
         </mockup>
      </nfcsvc>

      <snmpsvc>
         <enabled>false</enabled>
         <path>libsnmpsvc.so</path>
      </snmpsvc>

      <blklistsvc>
         <path>libblklistsvc.so</path>
         <enabled>false</enabled>
         <!-- <leaseTimeoutSecs> 150 </leaseTimeoutSecs> -->
         <!-- <wblEnabled> true </wblEnabled> -->
      </blklistsvc>

      <cimsvc>
         <path>libcimsvc.so</path>
         <enabled>false</enabled>
         <maxSelEntries>40</maxSelEntries>
         <pollTime>90</pollTime>
      </cimsvc>

      <directorysvc>
         <path>libdirectorysvc.so</path>
         <enabled>false</enabled>
         <mockup>
            <enabled>false</enabled>
         </mockup>
      </directorysvc>

      <vdisksvc>
         <path>libvdisksvc.so</path>
         <enabled>false</enabled>
         <mockup>
            <enabled>false</enabled>
         </mockup>
      </vdisksvc>

     <vslmsvc>
         <path>libvslmsvc.so</path>
         <enabled>false</enabled>
         <mockup>
            <enabled>false</enabled>
         </mockup>
      </vslmsvc>

      <httpnfcsvc>
         <path>libhttpnfcsvc.so</path>
         <enabled>false</enabled>
         <mockup>
            <enabled>false</enabled>
         </mockup>
         <requires>proxysvc</requires>
      </httpnfcsvc>

      <ovfmgrsvc>
         <path>libovfmgrsvc.so</path>
         <enabled>true</enabled>
      </ovfmgrsvc>

      <dynsvc>
         <path>libdynsvc.so</path>
         <enabled>false</enabled>
         <dynamic>true</dynamic>
      </dynsvc>

      <guestsvc>
         <path>libguestsvc.so</path>
         <enabled>false</enabled>
      </guestsvc>

      <hbrsvc>
         <path>libhbrsvc.so</path>
         <enabled>false</enabled>
         <mockup>
         <!-- Mock HBR is on if running in the the simulator -->
            <enabled>false</enabled>
         </mockup>
         <requires>vmsvc</requires>
      </hbrsvc>

      <cbrcsvc>
         <path>libcbrcsvc.so</path>
         <enabled>false</enabled>
      </cbrcsvc>

      <hostspecsvc>
         <path>libhostspecsvc.so</path>
         <enabled>false</enabled>
     </hostspecsvc>


   </plugins>

   <!--Locale preferences-->
   <!--DefaultLocale - this is the preferred default locale -->
   <!--InstallPath   - this is the location of the locale files-->
   <!--
   <locale>
      <DefaultLocale>en_US</DefaultLocale>
      <InstallPath>./locale/</InstallPath>
   </locale>
   -->

</config>